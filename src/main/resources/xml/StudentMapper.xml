<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manage.employ.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.manage.employ.beans.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="stu_sex" jdbcType="VARCHAR" property="stuSex" />
    <result column="stu_age" jdbcType="INTEGER" property="stuAge" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="stu_major" jdbcType="VARCHAR" property="stuMajor" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stu_id, password, stu_name, stu_sex, stu_age, school, stu_major, classes, phone, 
    type
  </sql>
  <select id="selectByExample" parameterType="com.manage.employ.beans.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.manage.employ.beans.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.manage.employ.beans.Student">
    insert into student (id, stu_id, password, 
      stu_name, stu_sex, stu_age, 
      school, stu_major, classes, 
      phone)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{stuName,jdbcType=VARCHAR}, #{stuSex,jdbcType=VARCHAR}, #{stuAge,jdbcType=INTEGER}, 
      #{school,jdbcType=VARCHAR}, #{stuMajor,jdbcType=VARCHAR}, #{classes,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.manage.employ.beans.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="stuSex != null">
        stu_sex,
      </if>
      <if test="stuAge != null">
        stu_age,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="stuMajor != null">
        stu_major,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null">
        #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuAge != null">
        #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="stuMajor != null">
        #{stuMajor,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.manage.employ.beans.StudentExample" resultType="java.lang.Integer">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuSex != null">
        stu_sex = #{record.stuSex,jdbcType=VARCHAR},
      </if>
      <if test="record.stuAge != null">
        stu_age = #{record.stuAge,jdbcType=INTEGER},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.stuMajor != null">
        stu_major = #{record.stuMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.classes != null">
        classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      stu_sex = #{record.stuSex,jdbcType=VARCHAR},
      stu_age = #{record.stuAge,jdbcType=INTEGER},
      school = #{record.school,jdbcType=VARCHAR},
      stu_major = #{record.stuMajor,jdbcType=VARCHAR},
      classes = #{record.classes,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.manage.employ.beans.Student">
    update student
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null">
        stu_sex = #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuAge != null">
        stu_age = #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="stuMajor != null">
        stu_major = #{stuMajor,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.manage.employ.beans.Student">
    update student
    set stu_id = #{stuId,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      stu_name = #{stuName,jdbcType=VARCHAR},
      stu_sex = #{stuSex,jdbcType=VARCHAR},
      stu_age = #{stuAge,jdbcType=INTEGER},
      school = #{school,jdbcType=VARCHAR},
      stu_major = #{stuMajor,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>