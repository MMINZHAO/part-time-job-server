<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manage.employ.mapper.JobWantedMapper">
  <resultMap id="BaseResultMap" type="com.manage.employ.beans.JobWanted">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="intention" jdbcType="VARCHAR" property="intention" />
    <result column="salary" jdbcType="DECIMAL" property="salary" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="jianli_id" jdbcType="INTEGER" property="jianliId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="mailbox" jdbcType="VARCHAR" property="mailbox" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stu_id, intention, salary, address, jianli_id, phone, mailbox
  </sql>
  <select id="selectByExample" parameterType="com.manage.employ.beans.JobWantedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job_wanted
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job_wanted
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job_wanted
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.manage.employ.beans.JobWantedExample">
    delete from job_wanted
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.manage.employ.beans.JobWanted">
    insert into job_wanted (id, stu_id, intention, 
      salary, address, jianli_id, 
      phone, mailbox)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER}, #{intention,jdbcType=VARCHAR}, 
      #{salary,jdbcType=DECIMAL}, #{address,jdbcType=VARCHAR}, #{jianliId,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR}, #{mailbox,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.manage.employ.beans.JobWanted">
    insert into job_wanted
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="intention != null">
        intention,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="jianliId != null">
        jianli_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="mailbox != null">
        mailbox,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="intention != null">
        #{intention,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="jianliId != null">
        #{jianliId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null">
        #{mailbox,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.manage.employ.beans.JobWantedExample" resultType="java.lang.Integer">
    select count(*) from job_wanted
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job_wanted
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.intention != null">
        intention = #{record.intention,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DECIMAL},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.jianliId != null">
        jianli_id = #{record.jianliId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.mailbox != null">
        mailbox = #{record.mailbox,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job_wanted
    set id = #{record.id,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=INTEGER},
      intention = #{record.intention,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=DECIMAL},
      address = #{record.address,jdbcType=VARCHAR},
      jianli_id = #{record.jianliId,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      mailbox = #{record.mailbox,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.manage.employ.beans.JobWanted">
    update job_wanted
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="intention != null">
        intention = #{intention,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="jianliId != null">
        jianli_id = #{jianliId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null">
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.manage.employ.beans.JobWanted">
    update job_wanted
    set stu_id = #{stuId,jdbcType=INTEGER},
      intention = #{intention,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DECIMAL},
      address = #{address,jdbcType=VARCHAR},
      jianli_id = #{jianliId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      mailbox = #{mailbox,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>